{
  "openapi": "3.0.2",
  "info": {
    "title": "Zoonotify Server",
    "description": "This is the api of the Zoonotify server",
    "contact": {
      "email": "zoonotify@bfr.bund.de"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "1.2.0"
  },
  "externalDocs": {
    "description": "Find out more about the Zoonotify",
    "url": "https://zoonotify.bfr.bund.de/content/faq"
  },
  "servers": [
    {
      "url": "https://zoonotify.bfr.bund.de/v1"
    }
  ],
  "tags": [
    {
      "name": "Util",
      "description": "Access to Server Utiliy functions"
    },
    {
      "name": "Isolate",
      "description": "Access to Isolat functions"
    }
  ],
  "paths": {
    "/info": {
      "get": {
        "operationId": "getSystemInfo",
        "tags": [
          "Util"
        ],
        "summary": "Retrieve server information",
        "description": "Returns current server version number as well as the date of the last server update.",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SystemInformation"
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/filterconfig": {
      "get": {
        "operationId": "getFilterConfig",
        "tags": [
          "Util"
        ],
        "summary": "Retrieve information about filter",
        "description": "Returns filterconfig as JSON.",
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetFilterConfigurationSuccessResponse"
          },
          "500": {
            "$ref": "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/isolate": {
      "get": {
        "operationId": "getIsolates",
        "tags": [
          "Isolate"
        ],
        "summary": "Get the isolates",
        "description": "Retrieve the isolate dataset",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathogenQuery"
          },
          {
            "$ref": "#/components/parameters/MatrixQuery"
          },
          {
            "$ref": "#/components/parameters/SamplingLocationQuery"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetIsolatesSuccessResponse"
          },
          "500": {
            "$ref": "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    },
    "/isolate/counted": {
      "get": {
        "operationId": "getCountOfIsolates",
        "tags": [
          "Isolate"
        ],
        "summary": "Retrieve the count of isolates in the dataset",
        "description": "Returns object with the total number of isolates and count distribution",
        "parameters": [
          {
            "$ref": "#/components/parameters/PathogenQuery"
          },
          {
            "$ref": "#/components/parameters/MatrixQuery"
          },
          {
            "$ref": "#/components/parameters/SamplingLocationQuery"
          },
          {
            "$ref": "#/components/parameters/RowSettings"
          },
          {
            "$ref": "#/components/parameters/ColumnSettings"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/GetCountedIsolatesSuccessResponse"
          },
          "500": {
            "$ref": "#/components/responses/Standard500ErrorResponse"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AntiBioticResistence": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AntiBioticResistenceTypes"
        }
      },
      "AntiBioticResistenceTypes": {
        "type": "string",
        "enum": [
          "amp",
          "azi",
          "chl",
          "cip",
          "cli",
          "col",
          "dap",
          "ery",
          "etp",
          "fep",
          "fop",
          "fox",
          "fus",
          "f_c",
          "gen",
          "imi",
          "kan",
          "lzd",
          "mero",
          "mup",
          "nal",
          "pen",
          "rif",
          "smx",
          "str",
          "syn",
          "taz",
          "tec",
          "tet",
          "tgc",
          "tia",
          "tmp",
          "trm",
          "t_c",
          "van"
        ]
      },
      "FilterArray": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FilterValues"
        }
      },
      "FilterValues": {
        "type": "string",
        "description": "Includes the appropriate selectable data values",
        "enum": [
          "alle Werte",
          "<filter specific values>"
        ],
        "default": "alle Werte"
      },
      "GetIsolatesSuccessResponseData": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/IsolatDTO"
        }
      },
      "IsolatDTO": {
        "type": "object",
        "required": [
          "id",
          "pathogen",
          "state",
          "year",
          "samplingReason",
          "samplingLocation",
          "samplingOrigin",
          "supercategory",
          "production",
          "matrix",
          "matrixDetail",
          "characteristics",
          "resistences"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "pathogen": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "year": {
            "type": "string"
          },
          "samplingReason": {
            "type": "string"
          },
          "samplingLocation": {
            "type": "string"
          },
          "samplingOrigin": {
            "type": "string"
          },
          "matrix": {
            "type": "string"
          },
          "matrixDetail": {
            "type": "string"
          },
          "supercategory": {
            "type": "string"
          },
          "production": {
            "type": "string"
          },
          "characteristics": {
            "$ref": "#/components/schemas/MicrobialCharacteristics"
          },
          "resistences": {
            "$ref": "#/components/schemas/AntiBioticResistence"
          }
        }
      },
      "MicrobialCharacteristics": {
        "type": "object",
        "properties": {
          "sepecies": {
            "type": "string"
          },
          "serovar": {
            "type": "string"
          },
          "serotype": {
            "type": "string"
          },
          "spa_typ": {
            "type": "string"
          },
          "o_group": {
            "type": "string"
          },
          "h_group": {
            "type": "string"
          },
          "stx1": {
            "type": "string"
          },
          "stx2": {
            "type": "string"
          },
          "eae": {
            "type": "string"
          },
          "e_hly": {
            "type": "string"
          },
          "ampc_carba_phenotype": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          },
          "code": {
            "$ref": "#/components/schemas/ErrorCode"
          }
        }
      },
      "ErrorCode": {
        "type": "number",
        "description": "- 1: Unknown error",
        "enum": [
          1
        ]
      },
      "SystemInformation": {
        "required": [
          "lastChange",
          "version",
          "supportContact"
        ],
        "type": "object",
        "properties": {
          "version": {
            "type": "string",
            "description": "Server version number"
          },
          "supportContact": {
            "type": "string",
            "description": "Email of the Zoonotify support"
          },
          "lastChange": {
            "type": "string",
            "description": "Date of last code change",
            "format": "date-time"
          }
        }
      },
      "GetFilterConfigurationSuccessResponseData": {
        "type": "object",
        "required": [
          "filters"
        ],
        "properties": {
          "filters": {
            "$ref": "#/components/schemas/FilterConfigList"
          }
        }
      },
      "FilterConfigList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/FilterConfigInformation"
        }
      },
      "FilterConfigInformation": {
        "type": "object",
        "description": "Poperties for one filter",
        "required": [
          "id",
          "name",
          "values"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID of the filter"
          },
          "name": {
            "type": "string",
            "description": "Name of the filter"
          },
          "parent": {
            "type": "string",
            "description": "Id of corresponding mainfilter-IDs"
          },
          "values": {
            "type": "array",
            "description": "List of filter values",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCountedIsolatesSuccessResponseData": {
        "type": "object",
        "required": [
          "totalNumberOfIsolates"
        ],
        "properties": {
          "totalNumberOfIsolates": {
            "type": "number"
          },
          "table": {
            "$ref": "#/components/schemas/CountTable"
          }
        }
      },
      "CountTable": {
        "type": "object",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/CountTableColumns"
          },
          "rows": {
            "$ref": "#/components/schemas/CountTableRowsList"
          }
        }
      },
      "CountTableColumns": {
        "type": "array",
        "items": {
          "type": "string"
        }
      },
      "CountTableRowsList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/CountTableRowsEntries"
        }
      },
      "CountTableRowsEntries": {
        "type": "object",
        "properties": {
          "rowname": {
            "type": "string"
          },
          "values": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "responses": {
      "Standard500ErrorResponse": {
        "description": "An unexpected error occured",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Standard400ErrorResponse": {
        "description": "Invalid request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "GetIsolatesSuccessResponse": {
        "description": "Successful Dataset retrieval",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetIsolatesSuccessResponseData"
            }
          }
        }
      },
      "GetCountedIsolatesSuccessResponse": {
        "description": "Successful Dataset description retrieval",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetCountedIsolatesSuccessResponseData"
            }
          }
        }
      },
      "GetFilterConfigurationSuccessResponse": {
        "description": "Successful filter configuration retrieval",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/GetFilterConfigurationSuccessResponseData"
            }
          }
        }
      }
    },
    "parameters": {
      "SamplingLocationQuery": {
        "name": "sLocation",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/FilterArray"
        }
      },
      "PathogenQuery": {
        "name": "pathogen",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/FilterArray"
        }
      },
      "MatrixQuery": {
        "name": "matrix",
        "in": "query",
        "schema": {
          "$ref": "#/components/schemas/FilterArray"
        }
      },
      "RowSettings": {
        "name": "row",
        "in": "query",
        "description": "The applied row setting",
        "schema": {
          "type": "string"
        }
      },
      "ColumnSettings": {
        "name": "column",
        "in": "query",
        "description": "The applied column setting",
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {},
    "securitySchemes": {}
  }
}